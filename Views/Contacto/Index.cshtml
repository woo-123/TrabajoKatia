@model IEnumerable<GrupoPrueba2.Models.Contact>
 @using Microsoft.AspNetCore.Identity   
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"]= "Contacto";
    IdentityUser myidentity = await Task.Run(() => UserManager.GetUserAsync(User));
    var roles = await Task.Run(() => UserManager.GetRolesAsync(myidentity));
}



<p>
    <a asp-action="Create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            
            <th>
                @Html.DisplayNameFor(Model=>Model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(Model=>Model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(Model=>Model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(Model=>Model.Comment)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
              
                <td>
                @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.Comment)
                </td>
                  @if(roles.Contains("Admin") || roles.Contains("Operador")){
                  <td>
                      
                <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td> 
                  }
            </tr>
        }
    </tbody>
</table>