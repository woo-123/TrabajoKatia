@using Microsoft.AspNetCore.Identity
@using System.Collections.Generic;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="nav-ul">
@if (SignInManager.IsSignedIn(User))
{
    IdentityUser myidentity = await Task.Run(() => UserManager.GetUserAsync(User));
    var roles = await Task.Run(() => UserManager.GetRolesAsync(myidentity));
    //bool isadmin =await Task.Run(() => UserManager.IsInRoleAsync(myidentity,"Admin"));
    @if(roles.Contains("Admin") || roles.Contains("Operador")){
        

    //@if(UserManager.GetUserName(User).Equals("adriano@gmail.com")){
        <li class="nav-item">
            <a class="nav-link text-dark bi bi-cart" asp-area="" asp-controller="product" asp-action="Index">Productos</a>
        </li>   
        <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Contacto" asp-action="Index">Contacto</a>
        </li>  
    }
     @if(roles.Contains("User")){
         <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Contacto" asp-action="Create">Contacto</a>
        </li>
     }
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Proforma" asp-action="Index">Carrito</a>
    </li>
    <li class="nav-item">
        <a  class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="logout" style='color:#fff'>Logout</button>
        </form>
    </li>
    
    
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
